""" Массивы - это способ хранить соответствие между индексом и значением и
зная индекс быстро получить значение
Но что делать, если в качестве индекса нужно не число, а строка?
В Питоне очень похоже на словарь, в Яваскрипт это объекты,
в других языках HahsMap
Имеют разные свойства немного, но суть одна - ключ:значение

Тем, чтобы внести новую пару в хеш-таблицу заведует хеш-функция
Она неким образом вычисляет индекс для пары, или находит старые
Она должна быть стабильна и помнить все ранние соответствия
Можно удалять или добавлять пары не сдвигая все остальные - Д массивы
"""


""" Hash-функции 
Хеш-функция должна по ключу возвращать значение пары,
должна быть стабильной, то есть находить одно и то же раз за разом, не путаясь.
Время работы не должно зависеть от размера массива 

Хешировать - создавать смесь, неким образом преобразовать входные данные, чтобы
получить уникальный ключ. Но важно, что для одних и теж же значений результат 
повторяем, нет уникальности бех причины

Если для разных ключей создается одинаковый хеш - коллизия хеш-функций, 
проблема. Так бывает, когда для длинной строки создается короткий хеш
"""


""" Базовая реализация HashMap 

Нужен массив для хранения и хеш-функция для работы с ключами

В основном на уровне операционной системы создаются списки фиксированной
длины. Чтобы дополнить их при заполнении мы должны создать новый побольше 
(принято в два раза) и скопировать туда старый, а старый удалить и освободить 
место.
Если наоборот создали слишком большой, то уменьшаем его вдвое если занято 
только четверть мест в массиве
Это оптимизирует частоту пересозданий

Для отслеживания создадим переменную, которая будет считать добавления, и ее 
значение будет индексом последнего элемента.  
И есть переменная size - длина массива. Когда переменные равны - пересоздаем
Именно так работают динамические массивы во всех языках

Обычно хеш-функция не знает индекс элемента
"""