""" Константное время - например, перебор фиксированного списка и деление
каждого элемента на число.
Не важно, на какое число, все равно перебираем весь список
НЕ зависит от входных данных - О(1)

Еще пример: получить массив, высчитать длину, умножить ее на 7 и
вернуть результат. Не важно, каой длины массив, получение длины - 1 операция"""


""" Линейное время - если входящие данные больше в  20 раз, то и процесс
в 20 раз дольше. 
Например, подается на вход список и определяются его четные члены.
Обработка списка из 10 значений в 10 раз быстрее, чем из 100 О(N) """


""" Квадратичное время, например вложенные циклы. Пришло в 10 раз больше данных
и это в 100 раз увеличило количество операций O(N**2)

Еще пример: в цикле крутится еще один цикл, но внутренний выполняется не N
раз, а 1+2+3+...+N, оно же (N/2). В итоге N * N/2 = N**2 так как коэффициенты 
мы отбрасываем """


''' Логарифмическое время 
На вход получаем число и делим его на 2, пока не выполнится некое условие '''


""" Совмещенное.
1. внешний цикл выполняется N раз, а вложенный log(N),
тогда это произведение. Но логарифм растет быстрее, поэтому логарифмичекая 
2. внешний N * log(N), вложенный 10N, итого log(N) * 10*N**2 
Квадрат растет быстрее логарифма, поэтому квадратичная """


""" Асимптотическая сложность алгоритма, короткий вариант - O 
Все константы отбрасываются, не O(3N), а O(N) 
Если асимптотика сложная, берем то, что сильнее влияет, то есть заменяем
O(N**2) + 250N на O(N**2) так как квадрат растет сильно быстрее """


